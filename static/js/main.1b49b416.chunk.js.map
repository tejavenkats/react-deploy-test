{"version":3,"sources":["components/TableRow.js","components/Table.js","App.js","index.js"],"names":["TableRow","props","contact","type","onChange","evt","addSelection","target","checked","contact_name","company_name","email","phone","gst_treatment","outstanding_receivable_amount","outstanding_payable_amount","Table","getAllContacts","fetch","method","then","res","json","catch","err","modifySelectedContacts","isChecked","selectedIds","state","contactId","contact_id","setState","arrAfterDeleting","filter","x","onLoadClicked","data","error","sortedTable","tbl","sortConfig","sortColumn","sortedTbl","sortOrder","sort","a","b","sortTable","event","colName","preventDefault","contacts","renderContacts","selectAll","this","selection","length","map","c","arr","className","e","onClick","idx","bind","console","log","join","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b49b416.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction TableRow(props) {\n  const { contact } = props;\n\n  const handleChkChange = function (evt) {\n    props.addSelection(contact, evt.target.checked);\n  };\n\n  return (\n    <tr>\n      <td>\n        <input type=\"checkbox\" onChange={handleChkChange} />\n      </td>\n      <td>{contact.contact_name}</td>\n      <td>{contact.company_name}</td>\n      <td>{contact.email}</td>\n      <td>{contact.phone}</td>\n      <td>{contact.gst_treatment}</td>\n      <td>{contact.outstanding_receivable_amount}</td>\n      <td>{contact.outstanding_payable_amount}</td>\n    </tr>\n  );\n}\n\nexport default TableRow;\n","import React, { Component } from \"react\";\nimport TableRow from \"./TableRow\";\n\nexport default class Table extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      data: { contacts: [] },\n      error: null,\n      sortConfig: {\n        sortColumn: \"contact_name\",\n        sortOrder: 1, //1 = ascending, else descending\n      },\n      selectedIds: [],\n    };\n\n    this.onLoadClicked = this.onLoadClicked.bind(this);\n    this.sortTable = this.sortTable.bind(this);\n  }\n\n  componentWillMount() {\n    this.onLoadClicked();\n  }\n\n  componentDidUpdate() {\n    console.log(\n      \"total: \" +\n        this.state.selectedIds.length +\n        \" | \" +\n        this.state.selectedIds.join(\" | \")\n    );\n  }\n\n  getAllContacts = () => {\n    return fetch(\"http://localhost:8080/contacts\", {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .catch((err) => err.json());\n  };\n\n  modifySelectedContacts = (contact, isChecked) => {\n    const { selectedIds } = this.state;\n    const contactId = contact.contact_id;\n\n    if (isChecked) {\n      this.setState({\n        selectedIds: [...selectedIds, contactId],\n      });\n    } else {\n      const arrAfterDeleting = selectedIds.filter((x) => x != contactId);\n      this.setState({\n        selectedIds: arrAfterDeleting,\n      });\n    }\n  };\n\n  onLoadClicked = () => {\n    this.getAllContacts()\n      .then((data) => {\n        this.setState({ data: data });\n      })\n      .catch((err) => this.setState({ error: err }));\n  };\n\n  //sorting function\n  sortedTable = (tbl) => {\n    const { sortConfig } = this.state;\n    if (sortConfig.sortColumn != \"\") {\n      let sortedTbl = [...tbl];\n      let sortColumn = sortConfig.sortColumn;\n      let sortOrder = sortConfig.sortOrder;\n\n      //sort using a custom functionqqqqqqqq\n      sortedTbl.sort((a, b) => {\n        if (a[sortColumn] < b[sortColumn]) {\n          return -1 * sortOrder;\n        }\n        if (a[sortColumn] == b[sortColumn]) {\n          return 0;\n        }\n        if (a[sortColumn] > b[sortColumn]) {\n          return 1 * sortOrder;\n        }\n      });\n      return sortedTbl;\n    }\n\n    //if sortconfig is not set, return table as is\n    else return tbl;\n  };\n\n  sortTable = (event, colName) => {\n    event.preventDefault();\n\n    let { sortColumn, sortOrder } = this.state.sortConfig;\n    if (colName == sortColumn) {\n      sortOrder = sortOrder * -1;\n    }\n\n    this.setState({ sortConfig: { sortColumn: colName, sortOrder } });\n\n    const { contacts } = this.state.data;\n    this.renderContacts(contacts);\n  };\n\n  selectAll = function () {\n    const { selectedIds } = this.state;\n    const { contacts } = this.state.data;\n\n    let selection = [];\n\n    //if all are selected, clear selection\n    if (selectedIds.length == contacts.length) {\n      this.setState({\n        selectedIds: selection,\n      });\n    }\n    //else select all\n    else {\n      selection = contacts.map((c) => c.contact_id);\n      this.setState({\n        selectedIds: selection,\n      });\n    }\n  };\n\n  renderContacts = (arr) => {\n    let sortedTbl = this.sortedTable(arr);\n\n    return (\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>\n              <input type=\"checkbox\" onChange={(e) => this.selectAll()} />\n            </th>\n            <th>\n              <button onClick={(e) => this.sortTable(e, \"contact_name\")}>\n                NAME\n              </button>\n            </th>\n            <th>\n              <button onClick={(e) => this.sortTable(e, \"company_name\")}>\n                COMPANY NAME\n              </button>\n            </th>\n            <th>\n              <button onClick={(e) => this.sortTable(e, \"email\")}>EMAIL</button>\n            </th>\n            <th>\n              <button onClick={(e) => this.sortTable(e, \"phone\")}>\n                WORK PHONE\n              </button>\n            </th>\n            <th>\n              <button onClick={(e) => this.sortTable(e, \"gst_treatment\")}>\n                GST TREATMENT\n              </button>\n            </th>\n            <th>\n              <button\n                onClick={(e) =>\n                  this.sortTable(e, \"outstanding_receivable_amount\")\n                }\n              >\n                RECEIVABLES\n              </button>\n            </th>\n            <th>\n              <button\n                onClick={(e) => this.sortTable(e, \"outstanding_payable_amount\")}\n              >\n                PAYABLES\n              </button>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedTbl.map((c, idx) => {\n            return (\n              <TableRow\n                key={idx}\n                contact={c}\n                addSelection={this.modifySelectedContacts}\n              />\n              // <tr key={idx}>\n              //   <td></td>\n              //   <td>{c.contact_name}</td>\n              //   <td>{c.company_name}</td>\n              //   <td>{c.email}</td>\n              //   <td>{c.phone}</td>\n              //   <td>{c.gst_treatment}</td>\n              //   <td>{c.outstanding_receivable_amount}</td>\n              //   <td>{c.outstanding_payable_amount}</td>\n              // </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  };\n\n  render() {\n    const { contacts } = this.state.data;\n\n    return (\n      <div>\n        <div className=\"results\">\n          {contacts.length ? this.renderContacts(contacts) : \"\"}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Table from \"./components/Table\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}